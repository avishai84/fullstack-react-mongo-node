{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nconst useFetchPage = url => {\n  _s();\n  const [data, setData] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch(url); // Use the relative path for the endpoint\n        const data = await response.json();\n        // const test = await fetch('http://localhost:3002/api/albums');\n        // const resTest = await test.json();\n        // const response = await fetch('http://localhost:3002/api/data'); // Use the relative path for the endpoint\n        // const data = await response.json();\n        setData(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setLoading(false);\n        setError(error);\n      }\n    }\n    fetchData();\n  }, [url]);\n  return {\n    data,\n    isLoading,\n    error\n  };\n};\n_s(useFetchPage, \"m1bhU4iO1nOQ1/v9w/H8uImExGg=\");\nexport default useFetchPage;","map":{"version":3,"names":["React","useEffect","useState","useFetchPage","url","_s","data","setData","isLoading","setLoading","error","setError","fetchData","response","fetch","json","console"],"sources":["/Users/Avishai/Developer/node-with-react2023/src/useFetchPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst useFetchPage = (url) => {\n    const [data, setData] = useState([]);\n    const [isLoading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                const response = await fetch(url); // Use the relative path for the endpoint\n                const data = await response.json();\n                // const test = await fetch('http://localhost:3002/api/albums');\n                // const resTest = await test.json();\n                // const response = await fetch('http://localhost:3002/api/data'); // Use the relative path for the endpoint\n                // const data = await response.json();\n                setData(data)\n                setLoading(false);\n          \n            } catch (error) {\n                console.error('Error fetching data:', error);\n                setLoading(false);\n                setError(error);\n            }\n        }\n       fetchData()\n\n    }, [url]);\n\n    return {data, isLoading, error}\n};\n\nexport default useFetchPage;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,MAAMC,YAAY,GAAIC,GAAG,IAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACM,SAAS,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,eAAeW,SAASA,CAAA,EAAG;MACvB,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACV,GAAG,CAAC,CAAC,CAAC;QACnC,MAAME,IAAI,GAAG,MAAMO,QAAQ,CAACE,IAAI,CAAC,CAAC;QAClC;QACA;QACA;QACA;QACAR,OAAO,CAACD,IAAI,CAAC;QACbG,UAAU,CAAC,KAAK,CAAC;MAErB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZM,OAAO,CAACN,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CD,UAAU,CAAC,KAAK,CAAC;QACjBE,QAAQ,CAACD,KAAK,CAAC;MACnB;IACJ;IACDE,SAAS,CAAC,CAAC;EAEd,CAAC,EAAE,CAACR,GAAG,CAAC,CAAC;EAET,OAAO;IAACE,IAAI;IAAEE,SAAS;IAAEE;EAAK,CAAC;AACnC,CAAC;AAACL,EAAA,CA5BIF,YAAY;AA8BlB,eAAeA,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}