{"ast":null,"code":"var _jsxFileName = \"/Users/Avishai/Developer/fullstack/node-with-react2023/src/components/Albums.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport useFetch from '../hooks/useFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Albums = () => {\n  _s();\n  const {\n    responseData,\n    error,\n    isLoading\n  } = useFetch('http://localhost:3002/api/albums');\n  const {\n    data\n  } = responseData;\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 14\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 14\n    }, this);\n  }\n  const albumList = data.map(album => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: \"0 0 33.33%\",\n        padding: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: album.thumbnailUrl,\n        alt: album.title,\n        style: {\n          width: \"100%\",\n          height: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: album.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, album.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  });\n  // create a flex grid of 3x3 with the albumList\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    children: albumList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n};\n_s(Albums, \"5M+gflR0HUMC21+P0RnDerl6VbM=\", false, function () {\n  return [useFetch];\n});\n_c = Albums;\nexport default Albums;\nvar _c;\n$RefreshReg$(_c, \"Albums\");","map":{"version":3,"names":["React","useFetch","jsxDEV","_jsxDEV","Albums","_s","responseData","error","isLoading","data","children","fileName","_jsxFileName","lineNumber","columnNumber","albumList","map","album","style","flex","padding","src","thumbnailUrl","alt","title","width","height","id","display","flexWrap","_c","$RefreshReg$"],"sources":["/Users/Avishai/Developer/fullstack/node-with-react2023/src/components/Albums.tsx"],"sourcesContent":["import React from 'react'\nimport useFetch from '../hooks/useFetch';\n\ntype DataFromFetch = {\n    albumId: number;\n    id: number;\n    thumbnailUrl:string;\n    title: string;\n    url: string;\n    };\n    \ntype DataArray = {data:Array<DataFromFetch>};    \n\nconst Albums = ():JSX.Element => {\n\n    const {responseData, error, isLoading} = useFetch<DataArray>('http://localhost:3002/api/albums');\n    const {data} = responseData as DataArray;\n \n    if (isLoading) {\n      return <div>Loading...</div>;\n    }\n    if (error) {\n      return <div>Error: {error as string}</div>;\n    }\n\n    const albumList = data.map((album) => {\n        return (\n            <div key={album.id} style={{ flex: \"0 0 33.33%\", padding: \"10px\" }}>\n            {/* Replace the content below with your desired album rendering */}\n            <img src={album.thumbnailUrl} alt={album.title} style={{ width: \"100%\", height: \"auto\" }} />\n            <p>{album.title}</p>\n          </div>\n        );\n    })\n    // create a flex grid of 3x3 with the albumList\n\n  return(<div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n    {albumList}\n  </div>);\n};\n\nexport default Albums;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYzC,MAAMC,MAAM,GAAGA,CAAA,KAAkB;EAAAC,EAAA;EAE7B,MAAM;IAACC,YAAY;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGP,QAAQ,CAAY,kCAAkC,CAAC;EAChG,MAAM;IAACQ;EAAI,CAAC,GAAGH,YAAyB;EAExC,IAAIE,SAAS,EAAE;IACb,oBAAOL,OAAA;MAAAO,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EACA,IAAIP,KAAK,EAAE;IACT,oBAAOJ,OAAA;MAAAO,QAAA,GAAK,SAAO,EAACH,KAAK;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CAAC;EAC5C;EAEA,MAAMC,SAAS,GAAGN,IAAI,CAACO,GAAG,CAAEC,KAAK,IAAK;IAClC,oBACId,OAAA;MAAoBe,KAAK,EAAE;QAAEC,IAAI,EAAE,YAAY;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAV,QAAA,gBAEnEP,OAAA;QAAKkB,GAAG,EAAEJ,KAAK,CAACK,YAAa;QAACC,GAAG,EAAEN,KAAK,CAACO,KAAM;QAACN,KAAK,EAAE;UAAEO,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAO;MAAE;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5FX,OAAA;QAAAO,QAAA,EAAIO,KAAK,CAACO;MAAK;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAHVG,KAAK,CAACU,EAAE;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIf,CAAC;EAEZ,CAAC,CAAC;EACF;;EAEF,oBAAOX,OAAA;IAAKe,KAAK,EAAE;MAAEU,OAAO,EAAE,MAAM;MAAEC,QAAQ,EAAE;IAAO,CAAE;IAAAnB,QAAA,EACtDK;EAAS;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AACR,CAAC;AAACT,EAAA,CA1BID,MAAM;EAAA,QAEiCH,QAAQ;AAAA;AAAA6B,EAAA,GAF/C1B,MAAM;AA4BZ,eAAeA,MAAM;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}