{"ast":null,"code":"var _jsxFileName = \"/Users/Avishai/Developer/fullstack/node-with-react2023/src/components/Albums.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport useFetch from '../hooks/useFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Albums = () => {\n  _s();\n  const {\n    responseData,\n    error,\n    isLoading\n  } = useFetch('http://localhost:3002/api/albums');\n  const {\n    data\n  } = responseData;\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 14\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 14\n    }, this);\n  }\n  // console.log(data)\n  // const showAlbums = (responseData.map((album:DataFromFetch) => {\n\n  //     return(<div key={album.id}>{album.title}</div>)\n  // }))\n\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"hi\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 11\n  }, this);\n};\n_s(Albums, \"5M+gflR0HUMC21+P0RnDerl6VbM=\", false, function () {\n  return [useFetch];\n});\n_c = Albums;\nexport default Albums;\nvar _c;\n$RefreshReg$(_c, \"Albums\");","map":{"version":3,"names":["React","useFetch","jsxDEV","_jsxDEV","Albums","_s","responseData","error","isLoading","data","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Avishai/Developer/fullstack/node-with-react2023/src/components/Albums.tsx"],"sourcesContent":["import React from 'react'\nimport useFetch from '../hooks/useFetch';\n\ntype DataFromFetch = {\n    albumId: number;\n    id: number;\n    thumbnailUrl:string;\n    title: string;\n    url: string;\n    };\n    \ntype DataArray = {data:Array<DataFromFetch>};    \n\nconst Albums = ():JSX.Element => {\n\n    const {responseData, error, isLoading} =  useFetch('http://localhost:3002/api/albums');\n    const {data} = responseData as DataArray;\n    \n    if (isLoading) {\n      return <div>Loading...</div>;\n    }\n    if (error) {\n      return <div>Error: {error as string}</div>;\n    }\n    // console.log(data)\n    // const showAlbums = (responseData.map((album:DataFromFetch) => {\n\n    //     return(<div key={album.id}>{album.title}</div>)\n    // }))\n\n  return (<h2>hi</h2>)\n};\n\nexport default Albums;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYzC,MAAMC,MAAM,GAAGA,CAAA,KAAkB;EAAAC,EAAA;EAE7B,MAAM;IAACC,YAAY;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAIP,QAAQ,CAAC,kCAAkC,CAAC;EACtF,MAAM;IAACQ;EAAI,CAAC,GAAGH,YAAyB;EAExC,IAAIE,SAAS,EAAE;IACb,oBAAOL,OAAA;MAAAO,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EACA,IAAIP,KAAK,EAAE;IACT,oBAAOJ,OAAA;MAAAO,QAAA,GAAK,SAAO,EAACH,KAAK;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CAAC;EAC5C;EACA;EACA;;EAEA;EACA;;EAEF,oBAAQX,OAAA;IAAAO,QAAA,EAAI;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AACrB,CAAC;AAACT,EAAA,CAlBID,MAAM;EAAA,QAEkCH,QAAQ;AAAA;AAAAc,EAAA,GAFhDX,MAAM;AAoBZ,eAAeA,MAAM;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}