{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\n\n// we need to accept argument as url for the fetch\n// we need to return the data, isLoasding, error\nexport default function useFetch(url) {\n  _s();\n  const [responseData, setResponseData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(url);\n        const responseDataObj = await response.json();\n        setResponseData(responseDataObj);\n        setIsLoading(false);\n      } catch (error) {\n        setError(error);\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [url]);\n  return {\n    responseData,\n    isLoading,\n    error\n  };\n}\n_s(useFetch, \"GmtL1pe2/yPrc+oNKaMRNivIT1U=\");","map":{"version":3,"names":["useEffect","useState","useFetch","url","_s","responseData","setResponseData","isLoading","setIsLoading","error","setError","fetchData","response","fetch","responseDataObj","json"],"sources":["/Users/Avishai/Developer/fullstack/node-with-react2023/src/hooks/useFetch.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react'\n\n// we need to accept argument as url for the fetch\n// we need to return the data, isLoasding, error\n\ntype DataProps = {data: Promise<Array<unknown>>};\n\ntype useFetchProps = {\n    responseData: DataProps | unknown;\n    isLoading: boolean,\n    error: undefined | null | string | unknown\n}\n\nexport default function useFetch(url:string):useFetchProps {\n    const [responseData, setResponseData] = useState<useFetchProps[\"responseData\"]>(null);\n    const [isLoading, setIsLoading] = useState<useFetchProps[\"isLoading\"]>(true);\n    const [error, setError] = useState<useFetchProps[\"error\"]>(null);\n\n    useEffect(() => {\n    const fetchData = async () => {\n        try {\n            const response = await fetch(url);\n            const responseDataObj = await response.json();\n            setResponseData(responseDataObj);\n            setIsLoading(false)\n        } catch (error) {\n            setError(error);\n            setIsLoading(false)\n        }\n    }\n    fetchData();\n\n    }, [url])\n\n    return { responseData, isLoading, error }\n}\n\n"],"mappings":";AAAA,SAAeA,SAAS,EAAEC,QAAQ,QAAO,OAAO;;AAEhD;AACA;AAUA,eAAe,SAASC,QAAQA,CAACC,GAAU,EAAgB;EAAAC,EAAA;EACvD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGL,QAAQ,CAAgC,IAAI,CAAC;EACrF,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAA6B,IAAI,CAAC;EAC5E,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAyB,IAAI,CAAC;EAEhED,SAAS,CAAC,MAAM;IAChB,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACV,GAAG,CAAC;QACjC,MAAMW,eAAe,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAC7CT,eAAe,CAACQ,eAAe,CAAC;QAChCN,YAAY,CAAC,KAAK,CAAC;MACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,QAAQ,CAACD,KAAK,CAAC;QACfD,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC;IACDG,SAAS,CAAC,CAAC;EAEX,CAAC,EAAE,CAACR,GAAG,CAAC,CAAC;EAET,OAAO;IAAEE,YAAY;IAAEE,SAAS;IAAEE;EAAM,CAAC;AAC7C;AAACL,EAAA,CAtBuBF,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}