{"ast":null,"code":"var _jsxFileName = \"/Users/Avishai/Developer/fullstack/node-with-react2023/src/components/Animals.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport useFetch from '../hooks/useFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Animals = () => {\n  _s();\n  const {\n    responseData,\n    error,\n    isLoading\n  } = useFetch('http://localhost:3002/api/data');\n  //const {data} = responseData as AnimalsArray;\n  // console.log(responseData, error, isLoading)\n  // if (isLoading) {\n  //   return <div>Loading...</div>;\n  // }\n  // if (error) {\n  //   return <div>Error: {error as string}</div>;\n  // }\n\n  // const animalList = data.map((animal) => {\n  //     return (\n  //         <div key={animal.name} style={{ flex: \"0 0 33.33%\", padding: \"10px\" }}>\n  //         {/* Replace the content below with your desired album rendering */}\n  //         <img src={animal.src} alt={animal.name} style={{ width: \"100%\", height: \"auto\" }} />\n  //         <p>{animal.location}</p>\n  //       </div>\n  //     );\n  // })\n  // create a flex grid of 3x3 with the albumList\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n};\n_s(Animals, \"5M+gflR0HUMC21+P0RnDerl6VbM=\", false, function () {\n  return [useFetch];\n});\n_c = Animals;\nexport default Animals;\nvar _c;\n$RefreshReg$(_c, \"Animals\");","map":{"version":3,"names":["React","useFetch","jsxDEV","_jsxDEV","Animals","_s","responseData","error","isLoading","style","display","flexWrap","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Avishai/Developer/fullstack/node-with-react2023/src/components/Animals.tsx"],"sourcesContent":["import React from 'react'\nimport useFetch from '../hooks/useFetch';\n\ntype Animals = {\n    name:string;\n    src:string;\n    location:string;\n}\n  \ntype AnimalsArray = {data:Array<Animals>};    \n\nconst Animals = ():JSX.Element => {\n\n    const {responseData, error, isLoading} = useFetch<Animals>('http://localhost:3002/api/data');\n    //const {data} = responseData as AnimalsArray;\n    // console.log(responseData, error, isLoading)\n    // if (isLoading) {\n    //   return <div>Loading...</div>;\n    // }\n    // if (error) {\n    //   return <div>Error: {error as string}</div>;\n    // }\n\n    // const animalList = data.map((animal) => {\n    //     return (\n    //         <div key={animal.name} style={{ flex: \"0 0 33.33%\", padding: \"10px\" }}>\n    //         {/* Replace the content below with your desired album rendering */}\n    //         <img src={animal.src} alt={animal.name} style={{ width: \"100%\", height: \"auto\" }} />\n    //         <p>{animal.location}</p>\n    //       </div>\n    //     );\n    // })\n    // create a flex grid of 3x3 with the albumList\n\n  return(<div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n    {/* {animalList} */}\n  </div>);\n};\n\nexport default Animals;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUzC,MAAMC,OAAO,GAAGA,CAAA,KAAkB;EAAAC,EAAA;EAE9B,MAAM;IAACC,YAAY;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGP,QAAQ,CAAU,gCAAgC,CAAC;EAC5F;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEF,oBAAOE,OAAA;IAAKM,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,QAAQ,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEpD,CAAC;AACR,CAAC;AAACV,EAAA,CA1BID,OAAO;EAAA,QAEgCH,QAAQ;AAAA;AAAAe,EAAA,GAF/CZ,OAAO;AA4Bb,eAAeA,OAAO;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}