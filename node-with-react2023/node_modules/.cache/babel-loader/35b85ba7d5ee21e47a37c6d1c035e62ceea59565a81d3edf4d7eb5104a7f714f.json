{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\n\n// we need to accept argument as url for the fetch\n// we need to return the data, isLoasding, error\n\nexport default function useFetch(url) {\n  _s();\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(url);\n        const data = await response.json();\n        setData(data);\n        setIsLoading(false);\n      } catch (error) {\n        setError(error);\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [url]);\n  return useMemo(() => ({\n    data,\n    isLoading,\n    error\n  }), [data, isLoading, error]);\n}\n_s(useFetch, \"rnjk1IUG4zt+vMb7ZJPTZfJpr3U=\");","map":{"version":3,"names":["useEffect","useState","useFetch","url","_s","data","setData","isLoading","setIsLoading","error","setError","fetchData","response","fetch","json","useMemo"],"sources":["/Users/Avishai/Developer/fullstack/node-with-react2023/src/hooks/useFetch.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react'\n\n// we need to accept argument as url for the fetch\n// we need to return the data, isLoasding, error\n\nexport default function useFetch(url:string) {\n    const [data, setData] = useState<Promise<unknown> | null>(null);\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n    const [error, setError] = useState<unknown | null>(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await fetch(url);\n                const data:Promise<unknown> = await response.json();\n                setData(data);\n                setIsLoading(false)\n            } catch (error:unknown) {\n                setError(error);\n                setIsLoading(false)\n            }\n        }\n        \n        fetchData();\n\n    }, [url])\n\n    return useMemo(() => ({ data, isLoading, error }), [data, isLoading, error]);\n}\n\n"],"mappings":";AAAA,SAAeA,SAAS,EAAEC,QAAQ,QAAO,OAAO;;AAEhD;AACA;;AAEA,eAAe,SAASC,QAAQA,CAACC,GAAU,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAA0B,IAAI,CAAC;EAC/D,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAU,IAAI,CAAC;EACzD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAiB,IAAI,CAAC;EAExDD,SAAS,CAAC,MAAM;IACZ,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACV,GAAG,CAAC;QACjC,MAAME,IAAqB,GAAG,MAAMO,QAAQ,CAACE,IAAI,CAAC,CAAC;QACnDR,OAAO,CAACD,IAAI,CAAC;QACbG,YAAY,CAAC,KAAK,CAAC;MACvB,CAAC,CAAC,OAAOC,KAAa,EAAE;QACpBC,QAAQ,CAACD,KAAK,CAAC;QACfD,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC;IAEDG,SAAS,CAAC,CAAC;EAEf,CAAC,EAAE,CAACR,GAAG,CAAC,CAAC;EAET,OAAOY,OAAO,CAAC,OAAO;IAAEV,IAAI;IAAEE,SAAS;IAAEE;EAAM,CAAC,CAAC,EAAE,CAACJ,IAAI,EAAEE,SAAS,EAAEE,KAAK,CAAC,CAAC;AAChF;AAACL,EAAA,CAvBuBF,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}