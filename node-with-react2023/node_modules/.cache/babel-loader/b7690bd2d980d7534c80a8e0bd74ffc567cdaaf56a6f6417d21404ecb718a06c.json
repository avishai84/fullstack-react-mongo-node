{"ast":null,"code":"var _jsxFileName = \"/Users/Avishai/Developer/fullstack/node-with-react2023/src/components/Store.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport useFetch from '../hooks/useFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Store = () => {\n  _s();\n  const {\n    responseData,\n    error,\n    isLoading\n  } = useFetch('http://localhost:3002/store');\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 14\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 14\n    }, this);\n  }\n  const storeList = responseData === null || responseData === void 0 ? void 0 : responseData.data.map(items => {\n    const {\n      _id,\n      item,\n      price\n    } = items;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      style: {\n        flex: \"0 0 33.33%\",\n        padding: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)]\n    }, _id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  });\n  // create a flex grid of 3x3 with the storeList\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: storeList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n};\n_s(Store, \"5M+gflR0HUMC21+P0RnDerl6VbM=\", false, function () {\n  return [useFetch];\n});\n_c = Store;\nexport default Store;\nvar _c;\n$RefreshReg$(_c, \"Store\");","map":{"version":3,"names":["React","useFetch","jsxDEV","_jsxDEV","Store","_s","responseData","error","isLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","storeList","data","map","items","_id","item","price","style","flex","padding","display","flexWrap","_c","$RefreshReg$"],"sources":["/Users/Avishai/Developer/fullstack/node-with-react2023/src/components/Store.tsx"],"sourcesContent":["import React, {useState} from 'react'\nimport useFetch from '../hooks/useFetch';\n\ntype DataFromStore = {\n    _id: string;\n    item:string;\n    price: number;\n    };\n\ntype MerchArray = {data:Array<DataFromStore>};    \n\nconst Store = ():JSX.Element => {\n\n    const {responseData, error, isLoading} = useFetch<MerchArray>('http://localhost:3002/store');\n\n    if (isLoading) {\n      return <div>Loading...</div>;\n    }\n    if (error) {\n      return <div>Error: {error as string}</div>;\n    }\n\n    const storeList = responseData?.data.map((items) => {\n        const {_id, item, price} = items;\n      \n        return (\n            <li key={_id} style={{ flex: \"0 0 33.33%\", padding: \"10px\" }}>\n            <p>{item}</p>\n            <p>{price}</p>\n          </li>\n        );\n    })\n    // create a flex grid of 3x3 with the storeList\n\n  return(<div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n     <ul>{storeList}</ul>\n  </div>);\n};\n\nexport default Store;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAkB,OAAO;AACrC,OAAOC,QAAQ,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUzC,MAAMC,KAAK,GAAGA,CAAA,KAAkB;EAAAC,EAAA;EAE5B,MAAM;IAACC,YAAY;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGP,QAAQ,CAAa,6BAA6B,CAAC;EAE5F,IAAIO,SAAS,EAAE;IACb,oBAAOL,OAAA;MAAAM,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EACA,IAAIN,KAAK,EAAE;IACT,oBAAOJ,OAAA;MAAAM,QAAA,GAAK,SAAO,EAACF,KAAK;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CAAC;EAC5C;EAEA,MAAMC,SAAS,GAAGR,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAES,IAAI,CAACC,GAAG,CAAEC,KAAK,IAAK;IAChD,MAAM;MAACC,GAAG;MAAEC,IAAI;MAAEC;IAAK,CAAC,GAAGH,KAAK;IAEhC,oBACId,OAAA;MAAckB,KAAK,EAAE;QAAEC,IAAI,EAAE,YAAY;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAd,QAAA,gBAC7DN,OAAA;QAAAM,QAAA,EAAIU;MAAI;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACbV,OAAA;QAAAM,QAAA,EAAIW;MAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAFLK,GAAG;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGV,CAAC;EAEX,CAAC,CAAC;EACF;;EAEF,oBAAOV,OAAA;IAAKkB,KAAK,EAAE;MAAEG,OAAO,EAAE,MAAM;MAAEC,QAAQ,EAAE;IAAO,CAAE;IAAAhB,QAAA,eACtDN,OAAA;MAAAM,QAAA,EAAKK;IAAS;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AACR,CAAC;AAACR,EAAA,CA1BID,KAAK;EAAA,QAEkCH,QAAQ;AAAA;AAAAyB,EAAA,GAF/CtB,KAAK;AA4BX,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}