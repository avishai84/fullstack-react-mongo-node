{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\n\n// we need to accept argument as url for the fetch\n// we need to return the data, isLoasding, error\nasync function fetchData(url) {\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n}\nexport default function useFetch(url) {\n  _s();\n  const [responseData, setResponseData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchData(url).then(data => {\n      setResponseData(data);\n      setIsLoading(false);\n    }).catch(error => {\n      setError(error);\n      setIsLoading(false);\n    });\n  }, [url]);\n  return {\n    responseData,\n    isLoading,\n    error\n  };\n}\n_s(useFetch, \"GmtL1pe2/yPrc+oNKaMRNivIT1U=\");","map":{"version":3,"names":["useEffect","useState","fetchData","url","response","fetch","data","json","useFetch","_s","responseData","setResponseData","isLoading","setIsLoading","error","setError","then","catch"],"sources":["/Users/Avishai/Developer/fullstack/node-with-react2023/src/hooks/useFetch.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react'\n\n// we need to accept argument as url for the fetch\n// we need to return the data, isLoasding, error\n\ntype UseFetchProps<T> = {\n    responseData: T | null;\n    isLoading: boolean,\n    error: undefined | null | string | unknown\n}\n\nasync function fetchData<T>(url: string): Promise<T> {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  }\n\nexport default function useFetch<T>(url:string):UseFetchProps<T> {\n    const [responseData, setResponseData] = useState<T | null>(null);\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n    const [error, setError] = useState<undefined | null | string | unknown>(null);\n\n    useEffect(() => {\n        fetchData<T>(url).then((data) => {\n            setResponseData(data);\n            setIsLoading(false)\n        })\n        .catch((error) => {\n            setError(error);\n            setIsLoading(false)\n        });\n\n    }, [url])\n\n    return { responseData, isLoading, error }\n}\n\n"],"mappings":";AAAA,SAAeA,SAAS,EAAEC,QAAQ,QAAO,OAAO;;AAEhD;AACA;AAQA,eAAeC,SAASA,CAAIC,GAAW,EAAc;EACjD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;EACjC,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACb;AAEF,eAAe,SAASE,QAAQA,CAAIL,GAAU,EAAmB;EAAAM,EAAA;EAC7D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAW,IAAI,CAAC;EAChE,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAU,IAAI,CAAC;EACzD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAsC,IAAI,CAAC;EAE7ED,SAAS,CAAC,MAAM;IACZE,SAAS,CAAIC,GAAG,CAAC,CAACa,IAAI,CAAEV,IAAI,IAAK;MAC7BK,eAAe,CAACL,IAAI,CAAC;MACrBO,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC,CACDI,KAAK,CAAEH,KAAK,IAAK;MACdC,QAAQ,CAACD,KAAK,CAAC;MACfD,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC;EAEN,CAAC,EAAE,CAACV,GAAG,CAAC,CAAC;EAET,OAAO;IAAEO,YAAY;IAAEE,SAAS;IAAEE;EAAM,CAAC;AAC7C;AAACL,EAAA,CAlBuBD,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}